@PrepareForTest-----DONE
@PowerMockIgnore----DONE
@InjectMock-------->DONE
@MockUtil----------------------------------------------------Pending
MockDestination----------------------------------------------Pending
any()------------>>DONE
@Mock.lient------------>>DONE(https://www.baeldung.com/mockito-unnecessary-stubbing-exception)
How to mock final class-------DONE
how to mock static method-----DONE
How mock a final method-------DONE
How to check that object is mocked object or not---DONE
What is Http Unit

https://vinaynotes.wordpress.com/tag/powermockignore/
https://www.javadoc.io/doc/org.powermock/powermock-core/1.6.5/org/powermock/core/classloader/annotations/PowerMockIgnore.html
https://lkrnac.net/blog/2014/01/mock-constructor/#mock-constructor
https://lkrnac.net/blog/2014/01/mock-final-class/#mock-final-class
https://dzone.com/articles/mock-final-method
https://www.baeldung.com/mockito-final
https://frontbackend.com/java/mocking-final-method-with-mockito-framework
https://stackoverflow.com/questions/11214136/unit-testing-with-mockito-for-constructors
https://github.com/powermock/powermock/wiki/Mockito#how-to-mock-construction-of-new-objects

System.out.println("===="+Mockito.mockingDetails(calcService1).isMock());

@RunWith(MockitoJunitRunner.class)-:Eable to run that particular class with Mockito
When(obj.calculate()).thenReturn(value,value);//That means if your method are called multiple times the you can mock to return multiple values
VerifyNoMoreInteraction()

InOrder inOrder=Mockito.inOrder(bookRepository);
inOrder.verify(bookRepository).save();
inOrder.verify(bookRepository).findById(bookId);

Type of Argument Matchers
Method Name 							Matching Rule
any()									any object or null
any(Class<T>clazz)						any object of given type or null
anyVararg()	Like anyInt(),anyString() 	any vararg

Note:-ArgumentMatcher should be provided for all Arguments

Collection Type Argument Matchers
Method Name 						Matching Rules
anyCollection()						any Collection type
anyList()							any list type
anyMap()							any Map type
anySet()							any Set type